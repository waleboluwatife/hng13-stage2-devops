##
# Nginx configuration for the blue/green deployment when the green pool is
# active.  The primary upstream server is app_green and app_blue is
# configured as a backup.  Behaviour and timeouts mirror the blue
# configuration but the roles of the pools are reversed.

upstream backend {
    # Primary server – green pool
    server app_green:__PORT__ max_fails=1 fail_timeout=5s;
    # Backup server – blue pool
    server app_blue:__PORT__ backup;
}

log_format hng_stage3
  '$remote_addr '
  '$time_local '
  'pool=$upstream_http_x_app_pool '
  'release=$upstream_http_x_release_id '
  'status=$status '
  'upstream_status=$upstream_status '
  'upstream_addr=$upstream_addr '
  'req_time=$request_time '
  'upstream_time=$upstream_response_time '
  '"$request"';

access_log /var/log/nginx/access_stage3.log hng_stage3;

server {
    listen 80;
    server_name _;

    location / {
        proxy_pass http://backend;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1s;
        proxy_send_timeout 1s;
        proxy_read_timeout 1s;

        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
    }
}